#-----------------------------------------------------------------------------
# REST VOL Config file for compiling against REST VOL build/install directory
#-----------------------------------------------------------------------------
@PACKAGE_INIT@

string(TOUPPER @HDF5_VOL_REST_PACKAGE@ HDF5_VOL_REST_PACKAGE_NAME)

set (${HDF5_VOL_REST_PACKAGE_NAME}_VALID_COMPONENTS
    static
    shared
    C
)

#-----------------------------------------------------------------------------
# User Options
#-----------------------------------------------------------------------------
set (${HDF5_VOL_REST_PACKAGE_NAME}_EXPORT_LIBRARIES @HDF5_VOL_REST_LIBRARIES_TO_EXPORT@)

#-----------------------------------------------------------------------------
# Directories
#-----------------------------------------------------------------------------
set (${HDF5_VOL_REST_PACKAGE_NAME}_INCLUDE_DIR "@PACKAGE_INCLUDE_INSTALL_DIR@" "${${HDF5_VOL_REST_PACKAGE_NAME}_MPI_C_INCLUDE_PATH}")

set (${HDF5_VOL_REST_PACKAGE_NAME}_SHARE_DIR "@PACKAGE_SHARE_INSTALL_DIR@")
set_and_check (${HDF5_VOL_REST_PACKAGE_NAME}_BUILD_DIR "@PACKAGE_CURRENT_BUILD_DIR@")

#-----------------------------------------------------------------------------
# Version Strings
#-----------------------------------------------------------------------------
set (HDF5_VOL_REST_VERSION_STRING @HDF5_VOL_REST_VERSION_STRING@)
set (HDF5_VOL_REST_VERSION_MAJOR  @HDF5_VOL_REST_VERSION_MAJOR@)
set (HDF5_VOL_REST_VERSION_MINOR  @HDF5_VOL_REST_VERSION_MINOR@)

#-----------------------------------------------------------------------------
# Don't include targets if this file is being picked up by another
# project which has already built hdf5 as a subproject
#-----------------------------------------------------------------------------
if (NOT TARGET "@HDF5_VOL_REST_PACKAGE@")
  include (@PACKAGE_SHARE_INSTALL_DIR@/@HDF5_VOL_REST_PACKAGE@@HDF5_VOL_REST_PACKAGE_EXT@-targets.cmake)
endif ()

# Handle default component(static) :
if (NOT ${HDF5_VOL_REST_PACKAGE_NAME}_FIND_COMPONENTS)
    set (${HDF5_VOL_REST_PACKAGE_NAME}_LIB_TYPE)
    set (${HDF5_VOL_REST_PACKAGE_NAME}_FIND_COMPONENTS C static)
    set (${HDF5_VOL_REST_PACKAGE_NAME}_FIND_REQUIRED_static_C true)
endif ()

# Handle requested components:
list (REMOVE_DUPLICATES ${HDF5_VOL_REST_PACKAGE_NAME}_FIND_COMPONENTS)
foreach (comp IN LISTS ${HDF5_VOL_REST_PACKAGE_NAME}_FIND_COMPONENTS)
  if (${comp} STREQUAL "shared")
    list (REMOVE_ITEM ${HDF5_VOL_REST_PACKAGE_NAME}_FIND_COMPONENTS ${comp})
    set (${HDF5_VOL_REST_PACKAGE_NAME}_LIB_TYPE ${${HDF5_VOL_REST_PACKAGE_NAME}_LIB_TYPE} ${comp})
  elseif (${comp} STREQUAL "static")
    list (REMOVE_ITEM ${HDF5_VOL_REST_PACKAGE_NAME}_FIND_COMPONENTS ${comp})
    set (${HDF5_VOL_REST_PACKAGE_NAME}_LIB_TYPE ${${HDF5_VOL_REST_PACKAGE_NAME}_LIB_TYPE} ${comp})
  endif ()
endforeach ()
foreach (libtype IN LISTS ${HDF5_VOL_REST_PACKAGE_NAME}_LIB_TYPE)
  foreach (comp IN LISTS ${HDF5_VOL_REST_PACKAGE_NAME}_FIND_COMPONENTS)
    set (hdf5_comp2)
    if (${comp} STREQUAL "C")
      set (hdf5_comp "hdf5")
    endif ()
    list (FIND ${HDF5_VOL_REST_PACKAGE_NAME}_EXPORT_LIBRARIES "${rv_comp}-${libtype}" HAVE_COMP)
    if (${HAVE_COMP} LESS 0)
      set (${HDF5_VOL_REST_PACKAGE_NAME}_${libtype}_${comp}_FOUND 0)
    else ()
      if (rv_comp2)
        list (FIND ${HDF5_VOL_REST_PACKAGE_NAME}_EXPORT_LIBRARIES "${rv_comp2}-${libtype}" HAVE_COMP2)
        if (${HAVE_COMP2} LESS 0)
          set (${HDF5_VOL_REST_PACKAGE_NAME}_${libtype}_${comp}_FOUND 0)
        else ()
          set (${HDF5_VOL_REST_PACKAGE_NAME}_${libtype}_${comp}_FOUND 1)
          string(TOUPPER ${HDF5_VOL_REST_PACKAGE_NAME}_${comp}_${libtype}_LIBRARY COMP_LIBRARY)
          set (${COMP_LIBRARY} ${${COMP_LIBRARY}} ${rv_comp2}-${libtype} ${rv_comp}-${libtype})
        endif ()
      else ()
        set (${HDF5_VOL_REST_PACKAGE_NAME}_${libtype}_${comp}_FOUND 1)
        string(TOUPPER ${HDF5_VOL_REST_PACKAGE_NAME}_${comp}_${libtype}_LIBRARY COMP_LIBRARY)
        set (${COMP_LIBRARY} ${${COMP_LIBRARY}} ${rv_comp}-${libtype})
      endif ()
    endif ()
  endforeach ()
endforeach ()

foreach (libtype IN LISTS ${HDF5_VOL_REST_PACKAGE_NAME}_LIB_TYPE)
  check_required_components(${HDF5_VOL_REST_PACKAGE_NAME}_${libtype})
endforeach ()
